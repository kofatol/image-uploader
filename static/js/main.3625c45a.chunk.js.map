{"version":3,"sources":["hooks/useInput.ts","utils/index.ts","hooks/useImage.ts","hooks/useLabelsInfo.ts","hooks/useImageDimensions.ts","components/ImageLabel/ImageLabel.tsx","components/ImageContent/ImageContent.tsx","components/ImageUploader/ImageUploader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useInput","useState","inputValue","setInputValue","isTouched","setIsTouched","isInputEmpty","setIsInputEmpty","onInputChange","value","target","onInputEnd","getImageSrc","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","onerror","error","useImage","imageSrc","setImageSrc","onFileInputClick","a","undefined","files","onUploadImageClick","currentTarget","nextElementSibling","click","useLabelsInfo","labelsInfo","setLabelsInfo","useImageDimensions","imgWrapperRef","imgHeight","imgWidth","imgX","imgY","onImageClick","event","relativeX","clientX","relativeY","clientY","prevState","newLabelInfo","id","Math","random","toFixed","useRef","height","width","y","x","imageDimensions","setImageDimensions","getImageDimensions","useCallback","current","getBoundingClientRect","updateImageDimensions","imgDimensions","useEffect","window","addEventListener","removeEventListener","ImageLabel","style","className","autoFocus","maxLength","disabled","size","length","onChange","onBlur","ImageContent","ref","src","alt","onClick","onError","console","map","label","labelStyle","left","top","ImageUploader","type","name","accept","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3625c45a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst useInput = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const [isInputEmpty, setIsInputEmpty] = useState(false);\n\n  const onInputChange = ({target: {value}}: React.ChangeEvent<HTMLInputElement>): void => setInputValue(value);\n\n  const onInputEnd = (): void => {\n    setIsTouched(true);\n    !inputValue && setIsInputEmpty(true);\n  };\n\n  return {inputValue, isTouched, isInputEmpty, onInputChange, onInputEnd};\n};\n\nexport default useInput;","export const getImageSrc = (file: File) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = (error) => {\n      reject(error);\n    };\n  });\n};\n\nexport const generateId = (): string => (Math.random() * 100 * Math.random() * 100).toFixed(3);\n","import { useState } from 'react';\nimport { getImageSrc } from 'utils';\nimport { onFileInputClickEvent, onUploadImageClickEvent } from 'model/types';\n\nconst useImage = () => {\n  const [imageSrc, setImageSrc] = useState('');\n\n  const onUploadImageClick = ({currentTarget}: onUploadImageClickEvent) => {\n    const fileInput = currentTarget.nextElementSibling as HTMLInputElement;\n    fileInput.click();\n  };\n\n  const onFileInputClick = async ({target}: onFileInputClickEvent) => {\n    const file: File = (target.files as FileList)[0];\n\n    if (file !== undefined) {\n      const imageSrc = await getImageSrc(file) as string;\n      setImageSrc(imageSrc);\n    }\n  };\n\n  return {imageSrc, onUploadImageClick, onFileInputClick};\n};\n\nexport default useImage;","import { generateId } from 'utils';\nimport React, { useState } from 'react';\nimport { useImageDimensions } from './index';\n\ntype LabelInfo = {\n  id: string;\n  relativeX: number;\n  relativeY: number;\n}\n\nconst useLabelsInfo = () => {\n  const [labelsInfo, setLabelsInfo] = useState<LabelInfo[]>([]);\n  const {imgWrapperRef, imgHeight, imgWidth, imgX, imgY} = useImageDimensions();\n\n  const onImageClick = (event: React.MouseEvent<HTMLImageElement>) => {\n    const relativeX = (event.clientX - imgX) / imgWidth;\n    const relativeY = (event.clientY - imgY) / imgHeight;\n\n    setLabelsInfo((prevState) => {\n      const newLabelInfo = {\n        id: generateId(),\n        relativeX,\n        relativeY\n      };\n\n      return [...prevState, newLabelInfo];\n    });\n  };\n\n  return {labelsInfo, onImageClick, imgWrapperRef, imgHeight, imgWidth};\n};\n\nexport default useLabelsInfo;","import { useCallback, useEffect, useRef, useState } from 'react';\n\nconst useImageDimensions = () => {\n  const imgWrapperRef = useRef<HTMLDivElement>(null);\n  const [imageDimensions, setImageDimensions] = useState({height: 0, width: 0, y: 0, x: 0});\n\n  const getImageDimensions = useCallback(() => {\n    const target = imgWrapperRef.current as HTMLDivElement;\n    const {height, width, x, y} = target.getBoundingClientRect();\n    return {height, width, x, y};\n  }, []);\n\n  const updateImageDimensions = useCallback(() => {\n    const imgDimensions = getImageDimensions();\n    setImageDimensions(imgDimensions);\n  }, [getImageDimensions]);\n\n  useEffect(() => {\n    updateImageDimensions();\n    window.addEventListener('resize', updateImageDimensions);\n\n    return () => window.removeEventListener('resize', updateImageDimensions);\n  }, [updateImageDimensions]);\n\n  return {\n    imgWrapperRef,\n    imgX: imageDimensions.x,\n    imgY: imageDimensions.y,\n    imgWidth: imageDimensions.width,\n    imgHeight: imageDimensions.height\n  };\n};\n\nexport default useImageDimensions;","import React from 'react';\nimport './ImageLabel.scss';\nimport { useInput } from 'hooks';\n\ntype ImageLabelProps = {\n  style: {\n    top: number;\n    left: number;\n  }\n}\n\nexport default function ImageLabel({style}: ImageLabelProps) {\n  const {inputValue, isTouched, isInputEmpty, onInputChange, onInputEnd} = useInput();\n\n  return (\n    isInputEmpty ? null :\n      <div\n        style={style}\n        className='ImageLabel'\n      >\n        <input\n          autoFocus\n          maxLength={100}\n          value={inputValue}\n          disabled={isTouched}\n          size={inputValue.length}\n          onChange={onInputChange}\n          onBlur={onInputEnd}\n          className='ImageLabel__input'\n        />\n      </div>\n  );\n}","import './ImageContent.scss';\nimport { useLabelsInfo } from 'hooks';\nimport { ImageLabel } from 'components';\n\ntype ImageContentProps = { imageSrc: string }\n\nexport default function ImageContent({imageSrc}: ImageContentProps) {\n  const {labelsInfo, onImageClick, imgWrapperRef, imgHeight, imgWidth} = useLabelsInfo();\n\n  return (\n    <div className='ImageContent' ref={imgWrapperRef}>\n      <img\n        src={imageSrc}\n        alt='uploaded'\n        onClick={onImageClick}\n        className='ImageContent__image'\n        onError={(error) => console.error(`Something went wrong: ${error}`)}\n      />\n      {\n        !!labelsInfo.length &&\n        labelsInfo.map((label) => {\n          const labelStyle = {\n            left: label.relativeX * imgWidth,\n            top: label.relativeY * imgHeight\n          };\n\n          return <ImageLabel key={label.id} style={labelStyle}/>;\n        })\n      }\n    </div>\n  );\n}","import './ImageUploader.scss';\nimport { onFileInputClickEvent, onUploadImageClickEvent } from 'model/types';\n\ntype ImageUploaderProps = {\n  onFileInputClick(e: onFileInputClickEvent): void;\n  onUploadImageClick(e: onUploadImageClickEvent): void;\n}\n\nexport default function ImageUploader({onUploadImageClick, onFileInputClick}: ImageUploaderProps) {\n  return (\n    <div className='ImageUploader'>\n      <h3 className='ImageUploader__text'>To upload an image please click on the button below</h3>\n      <button\n        onClick={onUploadImageClick}\n        className='ImageUploader__button'\n      >\n        Upload image\n      </button>\n      <input\n        value=''\n        type='file'\n        name='image'\n        accept='image/*'\n        onChange={onFileInputClick}\n        className='ImageUploader__input'\n      />\n    </div>\n  );\n}","import 'App.scss';\nimport { useImage } from 'hooks';\nimport { ImageContent, ImageUploader } from 'components';\n\nexport default function App() {\n  const {imageSrc, onUploadImageClick, onFileInputClick} = useImage();\n\n  return (\n    <div className='App'>\n      {\n        imageSrc && <ImageContent imageSrc={imageSrc}/>\n      }\n      {\n        !imageSrc &&\n        <ImageUploader\n          onFileInputClick={onFileInputClick}\n          onUploadImageClick={onUploadImageClick}\n        />\n      }\n    </div>\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}